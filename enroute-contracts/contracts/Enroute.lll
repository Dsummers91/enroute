;;; Enroute contract In LLL!

(seq

  ;; Memory Locations
  (def '*scratch1* 0x00)
  (def '*scratch2* 0x20)
  (def '*scratch3* 0x40)
  (def '*funcid*   0x60)

  ;; Storage Locations
  (def '*owner*            0x00)
  (def '*identity*         0x01)
  
  ;; Function Hashes
  (def '*confirm-shipment*       0x00000000)
  (def '*can-ship*               0x00000000)

  ;; Shifts the leftmost 4 bytes of a 32-byte number right by 28 bytes.
  (def 'shift-right (input)
    (div input (exp 2 224)))

  ;; Gets the function ID and stores it in memory for reference.
  (def 'get-function-id
    (mstore *funcid* (shift-right (calldataload 0x00))))

  (def 'function (function-hash code-body)
    (when (= (mload *funcid*) function-hash)
      code-body))

  (when(callvalue)
    (panic))
  (sstore *owner* (caller))

  (codecopy *scratch1* (bytecodesize) 32)
  (sstore *identity* (mload *scratch1*))

)
